<?php

namespace App\Controller;

use App\Form\ProductType;
use App\Entity\Product;

use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\Request;

use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\File\File;
use Symfony\Component\Security\Http\Authentication\AuthenticationUtils;


class HomeController extends Controller
{
    /**
     * @Route("/home", name="home")d
     */

    public function index(){

        $products= $this->getDoctrine()->getRepository(Product::class)->findAll();

        return $this->render('home/index.html.twig', [
            'products' => $products
        ]);
    }

    /**
     * @Route("/product/add", name="add_product")
     * Method({"GET", "POST"})
     */

     public function add() {

         $form = $this->createForm(ProductType::class, null, [
             'action' => $this->generateUrl('product-submission')
         ]);

        return $this->render('products/add.html.twig', array('form' => $form->createView()));
     }

    /**
     * @Route("/product-submission", name="product-submission")
     * Method({"POST"})
     */

    public function productSubmission(Request $request) {

        $product = new Product();

        $form = $this->createForm(ProductType::class, $product);

        $form->handleRequest($request);

        if($form->isSubmitted() && $form->isValid()) {

            // $image stores the uploaded file(image)
            /** @var $image */

            $image = $product->getImage();

            $fileName = $this->generateUniqueFileName().'.'.$image->guessExtension();

            // moves the file to the directory where brochures are stored
            $image->move(
                $this->getParameter('images_directory'),
                $fileName
            );

            // updates the 'image' property to store the file name
            // instead of its contents
            $product->setImage($fileName);

            $product = $form->getData();

            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->persist($product);
            $entityManager->flush();

            $this->addFlash('info', 'New product added !');

            return $this->redirectToRoute('home');


        }

    }


     /**
     * @Route("/product/edit/{id}", name="edit_product")
     * Method({"GET", "POST"})
     */

    public function edit(Request $request, $id) {
          
        $product = new Product();  
                
        $product= $this->getDoctrine()->getRepository(Product::class)->find($id);

        $product->setImage(
            new File($this->getParameter('images_directory').'/'.$product->getImage()));

        $form = $this->createForm(ProductType::class, $product);

              $form->handleRequest($request);

              if($form->isSubmitted() && $form->isValid()) {
                

                  $entityManager = $this->getDoctrine()->getManager();
                  $entityManager->flush();

                  return $this->redirectToRoute('home');
              }

              return $this->render('products/edit.html.twig', array('form' => $form->createView()));
            }
             
      /**
     * @Route("/product/{id}", name="show_product")
     */

    public function showProduct($id){

        $product= $this->getDoctrine()->getRepository(Product::class)->find($id);

        return $this->render('products/show.html.twig', [
            'product' => $product
        ]);
    }

    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }


//this is a comment

}

